class Solution {
    public boolean isAnagram(String s, String t) {
        //проверяем, если длины входящих строк разные или одна из них нулл, возвращаем фолз
       if (s == null || t == null) {
            return false;
        }

        if (s.length() != t.length()) {
            return false;
        }

        //создаем массив интов длиной 26 (кол-во букв в англ. алфавите)
        int[] alphabet = new int[26];


//проходим по этому массиву от нуля до длины одной из строк (они одинаковые)
        for (int i = 0; i < s.length(); i++) {
            //на каждом шаге берем индекс массива с алфавитом, который определяется,
            //как i-тая буква первой строки минус символ 'a' (s.charAt(i) - 'a')
            //таким образом у каждой буквы входной строки будет свое место в массиве из 26 элементов
            //(см. таблицу юникода)
            //таким образом мы побуквенно проходим каждую строку и для первой строки увеличиваем элемент /           //массива с алфавитом на 1, а для второй уменьшаем на один
            alphabet[s.charAt(i) - 'a']++;
            alphabet[t.charAt(i) - 'a']--;
        }
//проходим по массиву с алфавитом, если в нем каждый элемент равен нулю, возращаем тру, если нет, фолз
        for (int n : alphabet) {
            if (n != 0) {
                return false;
            }
        }


        return true;
       
    }
}